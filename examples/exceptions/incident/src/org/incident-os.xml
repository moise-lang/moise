<?xml version="1.0" encoding="UTF-8"?>

<?xml-stylesheet href="https://moise-lang.github.io/xml/os.xsl" type="text/xsl" ?>

<organisational-specification
    id="incident" os-version="1.0"

    xmlns="https://moise-lang.github.io/os"
    
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="https://moise-lang.github.io/os https://moise-lang.github.io/os.xsd">

    <structural-specification>
        <role-definitions>
            <role id="customer" />
            <role id="key_account_manager" />
            <role id="key_account_worker_1" />
            <role id="key_account_worker_2" />
            <role id="key_account_worker_3" />
            <role id="key_account_worker_4" />
            <role id="first_level_manager" />
            <role id="first_level_worker_1" />
            <role id="first_level_worker_2" />
            <role id="first_level_worker_3" />
            <role id="first_level_worker_4" />
            <role id="second_level_manager" />
            <role id="second_level_worker_1" />
            <role id="second_level_worker_2" />
            <role id="second_level_worker_3" />
            <role id="second_level_worker_4" />
            <role id="second_level_worker_5" />
            <role id="developer_manager" />
            <role id="developer_worker_1" />
            <role id="developer_worker_2" />
        </role-definitions>

        <group-specification
            id="incident_management_group">
            <subgroups>
                <group-specification
                    id="key_account_management_group">
                    <roles>
                        <role id="customer" min="1" max="1" />
                        <role id="key_account_manager" min="1" max="1" />
                        <role id="key_account_worker_1" min="1" max="1" />
                        <role id="key_account_worker_2" min="1" max="1" />
                        <role id="key_account_worker_3" min="1" max="1" />
                        <role id="key_account_worker_4" min="1" max="1" />
                    </roles>
                </group-specification>
                <group-specification
                    id="first_level_support_group">
                    <roles>
                        <role id="first_level_manager" min="1" max="1" />
                        <role id="first_level_worker_1" min="1" max="1" />
                        <role id="first_level_worker_2" min="1" max="1" />
                        <role id="first_level_worker_3" min="1" max="1" />
                        <role id="first_level_worker_4" min="1" max="1" />
                    </roles>
                </group-specification>
                <group-specification
                    id="second_level_support_group">
                    <roles>
                        <role id="second_level_manager" min="1" max="1" />
                        <role id="second_level_worker_1" min="1" max="1" />
                        <role id="second_level_worker_2" min="1" max="1" />
                        <role id="second_level_worker_3" min="1" max="1" />
                        <role id="second_level_worker_4" min="1" max="1" />
                        <role id="second_level_worker_5" min="1" max="1" />
                    </roles>
                </group-specification>
                <group-specification id="developer_group">
                    <roles>
                        <role id="developer_manager" min="1" max="1" />
                        <role id="developer_worker_1" min="1" max="1" />
                        <role id="developer_worker_2" min="1" max="1" />
                    </roles>
                </group-specification>
            </subgroups>
        </group-specification>

    </structural-specification>

    <functional-specification>

        <!-- KEY ACCOUNT MANAGEMENT PROCESS -->
        <scheme id="scheme_account_manager">

            <goal id="root_account_manager" ds="root key account management">
                <plan operator="sequence">
                    <goal id="get_description" ds="get-description" />
                    <goal id="gateway_can_handle_myself">
                        <plan operator="choice">
                            <goal id="can_handle" />
                            <goal id="cnh_branch" ds="cannot handle branch">
                                <plan operator="sequence">
                                    <goal id="cannot_handle" />
                                    <goal id="ask_1st_level_support" ttf="10 seconds" />
                                </plan>
                            </goal>
                        </plan>
                    </goal>
                    <goal id="explain_solution" />
                </plan>
            </goal>

            <notification-policy id="np1" target="ask_1st_level_support" condition="scheme_id(S) &amp; failed(S,ask_1st_level_support)">
                <exception-specification id="account_manager_exception">
                    <exception-argument id="warrantyStatus" arity="1" />
                    <raising-goal id="raise_account_manager_exception" />
                    <handling-goal id="cancel_problem_request" />
                </exception-specification>
            </notification-policy>

            <notification-policy id="np2" target="ask_1st_level_support"
                                 condition="scheme_id(S) &amp; unfulfilled(obligation(_,_,done(S,ask_1st_level_support,_),_))">
                <exception-specification id="account_manager_timeout">
                    <raising-goal id="raise_account_manager_timeout" />
                    <handling-goal id="invite_to_recall" />
                </exception-specification>
            </notification-policy>

            <mission id="m0" min="1" max="1">
                <goal id="root_account_manager" />
                <goal id="can_handle" />
                <goal id="cannot_handle" />
                <goal id="cancel_problem_request" />
                <goal id="invite_to_recall" />
            </mission>
            <mission id="m1" min="1" max="1">
                <goal id="get_description" />
            </mission>
            <mission id="m2" min="1" max="1">
                <goal id="ask_1st_level_support" />
                <goal id="raise_account_manager_exception" />
                <goal id="raise_account_manager_timeout" />
            </mission>
            <mission id="m3" min="1" max="1">
                <goal id="explain_solution" />
            </mission>

        </scheme>

        <!-- FIRST LEVEL SUPPORT PROCESS -->
        <scheme id="scheme_1st_level_support">

            <goal id="root_1st_level_support">
                <plan operator="sequence">
                    <goal id="handle_1st_level_issue" ds="handle 1st level issue" />
                    <goal id="gateway_result">
                        <plan operator="choice">
                            <goal id="result_solved" />
                            <goal id="r2li_branch" ds="result 2nd level issue branch">
                                <plan operator="sequence">
                                    <goal id="result_2nd_level_issue" />
                                    <goal id="ask_2nd_level_support" />
                                </plan>
                            </goal>
                        </plan>
                    </goal>
                    <goal id="provide_feedback_for_account_manager" />
                </plan>
            </goal>

            <notification-policy id="np3" target="ask_2nd_level_support" condition="scheme_id(S) &amp; failed(S,ask_2nd_level_support)">
                <exception-specification id="first_level_exception">
                    <exception-argument id="warrantyStatus" arity="1" />
                    <raising-goal id="raise_first_level_exception" />
                    <handling-goal id="handle_first_level_exception" />
                </exception-specification>
            </notification-policy>

            <mission id="m5" min="1" max="1">
                <goal id="root_1st_level_support" />
                <goal id="result_solved" />
                <goal id="result_2nd_level_issue" />
                <goal id="handle_first_level_exception" />
            </mission>
            <mission id="m6" min="1" max="1">
                <goal id="handle_1st_level_issue" />
            </mission>
            <mission id="m7" min="1" max="1">
                <goal id="ask_2nd_level_support" />
                <goal id="raise_first_level_exception" />
            </mission>
            <mission id="m8" min="1" max="1">
                <goal id="provide_feedback_for_account_manager" />
            </mission>

        </scheme>

        <!-- SECOND LEVEL SUPPORT PROCESS -->
        <scheme id="scheme_2nd_level_support">

            <goal id="root_2nd_level_support">
                <plan operator="sequence">
                    <goal id="handle_2nd_level_issue" ds="handle 1st level issue" />
                    <goal id="gateway_unsure">
                        <plan operator="choice">
                            <goal id="unsure_no" />
                            <goal id="uy_branch" ds="unsure_yes branch">
                                <plan operator="sequence">
                                    <goal id="unsure_yes" />
                                    <goal id="ask_developer" />
                                </plan>
                            </goal>
                        </plan>
                    </goal>
                    <goal id="gateway_result">
                        <plan operator="choice">
                            <goal id="result_solved" />
                            <goal id="rnr_branch" ds="fix in next release branch">
                                <plan operator="sequence">
                                    <goal id="result_fix_in_next_release" />
                                    <goal id="insert_into_product_backlog" />
                                </plan>
                            </goal>
                        </plan>
                    </goal>
                    <goal id="provide_feedback_for_1st_level_support" />
                </plan>
            </goal>

            <notification-policy id="np4" target="ask_developer" condition="scheme_id(S) &amp; failed(S,ask_developer)">
                <exception-specification id="second_level_exception">
                    <exception-argument id="warrantyStatus" arity="1" />
                    <raising-goal id="raise_second_level_exception" />
                    <handling-goal id="handle_second_level_exception" />
                </exception-specification>
            </notification-policy>

            <mission id="m10" min="1" max="1">
                <goal id="root_2nd_level_support" />
                <goal id="unsure_yes" />
                <goal id="unsure_no" />
                <goal id="result_solved" />
                <goal id="result_fix_in_next_release" />
                <goal id="handle_second_level_exception" />
            </mission>
            <mission id="m11" min="1" max="1">
                <goal id="handle_2nd_level_issue" />
            </mission>
            <mission id="m12" min="1" max="1">
                <goal id="ask_developer" />
                <goal id="raise_second_level_exception" />
            </mission>
            <mission id="m13" min="1" max="1">
                <goal id="provide_feedback_for_1st_level_support" />
            </mission>
            <mission id="m14" min="1" max="1">
                <goal id="insert_into_product_backlog" />
            </mission>
            <!-- <mission id="m15" min="1" max="1"> <goal id="expf1ls1" /> </mission> -->

        </scheme>

        <!-- DEVELOPER PROCESS -->
        <scheme id="scheme_developer">

            <goal id="root_developer" ttf="5 seconds">
                <plan operator="sequence">
                    <goal id="examine_problem" />
                    <goal id="provide_feedback_for_2nd_level_support"
                        ttf="5 seconds" />
                </plan>
            </goal>

            <notification-policy id="np5" target="examine_problem" condition="scheme_id(S) &amp; failed(S,examine_problem)">
                <exception-specification id="developer_exception">
                    <exception-argument id="warrantyStatus" arity="1" />
                    <raising-goal id="raise_developer_exception" />
                    <handling-goal id="handle_developer_exception" />
                </exception-specification>
            </notification-policy>

            <notification-policy id="np6" target="provide_feedback_for_2nd_level_support"
                                 condition="scheme_id(S) &amp; unfulfilled(obligation(_,_,done(S,provide_feedback_for_2nd_level_support,_),_))">
                <exception-specification id="developer_feedback_delay">
                    <exception-argument id="reason" arity="1" />
                    <raising-goal id="raise_developer_feedback_delay" />
                    <handling-goal id="handle_developer_feedback_delay" />
                </exception-specification>
            </notification-policy>

            <mission id="m16" min="1" max="1">
                <goal id="root_developer" />
                <goal id="handle_developer_exception" />
                <goal id="handle_developer_feedback_delay" />
            </mission>
            <mission id="m17" min="1" max="1">
                <goal id="examine_problem" />
                <goal id="raise_developer_exception" />
            </mission>
            <mission id="m18" min="1" max="1">
                <goal id="provide_feedback_for_2nd_level_support" />
                <goal id="raise_developer_feedback_delay" />
            </mission>

        </scheme>

    </functional-specification>

    <normative-specification>

        <norm id="n0" type="obligation" role="key_account_manager"
            mission="m0" />
        <norm id="n1" type="obligation" role="key_account_worker_1"
            mission="m1" />
        <norm id="n2" type="obligation" role="key_account_worker_2"
            mission="m2" />
        <norm id="n3" type="obligation" role="key_account_worker_3"
            mission="m3" />
        <!-- <norm id="n4" type="obligation" role="key_account_worker_4" mission="m4" 
            /> -->

        <norm id="n5" type="obligation" role="first_level_manager"
            mission="m5" />
        <norm id="n6" type="obligation" role="first_level_worker_1"
            mission="m6" />
        <norm id="n7" type="obligation" role="first_level_worker_2"
            mission="m7" />
        <norm id="n8" type="obligation" role="first_level_worker_3"
            mission="m8" />
        <!-- <norm id="n9" type="obligation" role="first_level_worker_4" mission="m9" 
            /> -->

        <norm id="n10" type="obligation" role="second_level_manager"
            mission="m10" />
        <norm id="n11" type="obligation" role="second_level_worker_1"
            mission="m11" />
        <norm id="n12" type="obligation" role="second_level_worker_2"
            mission="m12" />
        <norm id="n13" type="obligation" role="second_level_worker_3"
            mission="m13" />
        <norm id="n14" type="obligation" role="second_level_worker_4"
            mission="m14" />
        <!-- <norm id="n15" type="obligation" role="second_level_worker_5" mission="m15"/> -->

        <norm id="n16" type="obligation" role="developer_manager"
            mission="m16" />
        <norm id="n17" type="obligation" role="developer_worker_1"
            mission="m17" />
        <norm id="n18" type="obligation" role="developer_worker_2"
            mission="m18" />

    </normative-specification>

</organisational-specification>
